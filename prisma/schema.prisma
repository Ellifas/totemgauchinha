
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Gauchinha{
  id String @id @default(uuid())
  name String
  slug String
  description String
  avatarImageUrl String
  coverImageUrl String
  createdAt DateTime @default(now())
  upadatedAT DateTime @updatedAt
  menuCategories MenuCat[]
  products Product[]
  orders Order[]
}

model MenuCat{
  id String @id @default(uuid())
  name String
  restaurant Gauchinha @relation(fields:[restaurantId] , references: [id])
  restaurantId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  products Product[]
}

model Product{
  id String @id @default(uuid())
  name String
  description String
  price Float
  imageUrl String
  ingredients String[]
  restaurant Gauchinha @relation(fields:[restaurantId] , references: [id])
  menuCategory MenuCat @relation(fields:[menuCatId] , references: [id])
  restaurantId String
  menuCatId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderProducts OrderProducts[]
}

model Order{
  id Int @id @default(autoincrement())
  total Float
  status OrderStatus
  orderProducts OrderProducts[]
  restaurantId String
  restaurant Gauchinha @relation(fields:[restaurantId] , references: [id])


}

model OrderProducts{
  id String @id @default(uuid())
  product Product @relation(fields:[productId] , references: [id])
  productId String
  order Order @relation(fields:[orderId] , references: [id])
  orderId Int
  quantity Int
  price Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus{
  PENDING
  IN_PROGRESS
  FINISHED
  CANCELED
}

